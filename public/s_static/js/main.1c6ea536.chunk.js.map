{"version":3,"sources":["component/navigation/navigation.js","component/t-course/t-course.js","pages/my-teachers.js","services/data-service.js","pages/topic.js","pages/course.js","component/lecture/lecture.js","component/theme/theme.js","pages/divisions.js","pages/my-courses.js","pages/all-courses.js","pages/lk.js","pages/tests.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","state","activeItem","handleItemClick","e","name","setState","this","Grid","Column","width","Header","as","icon","color","textAlign","Icon","Menu","pointing","secondary","vertical","fluid","to","Item","active","onClick","Component","Tcourse","props","data","DataService","courses","updateInfo","getCourseByTeacher","then","res","map","n","progress","Table","Row","key","id","Cell","Button","console","log","celled","size","HeaderCell","Body","Footer","colSpan","MyTeachers","teachers","getMyTeachers","Card","header","description","extra","match","path","coursesCount","class","url","Group","T","withRouter","userInfo","location","university","email","site","StudentById","firstName","lastName","login","password","birthDate","role","memo","subjects","myTeacher","courseDetail","teacher","topics","text","tests","gcourse","level","_teacher","_progress","gThemes","themes","statuses","gTasks","lectures","content","lecture","allCourse","teacherCourse","id2","Cc","Update","getCourseById","tt","params","Divider","horizontal","Label","history","pathname","React","TopicPage","C","Content","Meta","className","card","Container","_Lecture","onLoad","theme_id","update","getLecture","__html","hidden","dangerouslySetInnerHTML","createMarkup","Segment","action","enctype","method","type","Lecture","_Tasks","course_id","getTasks","status","ic","c","undefined","find","r","document","slice","Tasks","Division","coure_id","getThemes","pd","cl","st","Divisions","MyCourses","_getMyCourses","Progress","percent","indicating","label","matchPath","AllCourses","el","AddCourse","alert","getAllCourse","Description","d","ListIcon","Message","LK","getStudent","Tt","window","back","inverted","TestsPage","App","basename","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c6ea536.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Grid, Menu, Header, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class Navigation extends Component {\r\n  state = { activeItem: \"Личный кабинет\" };\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n  render() {\r\n    const { activeItem } = this.state;\r\n\r\n    return (\r\n      <Grid.Column width={3}>\r\n        <Header as=\"h1\" icon color=\"red\" textAlign=\"center\">\r\n          <Icon name=\"student\" />\r\n          I-learn\r\n        </Header>\r\n        <Menu pointing secondary vertical fluid>\r\n          <Link to=\"/\">\r\n            <Menu.Item\r\n              name=\"Личный кабинет\"\r\n              active={activeItem === \"Личный кабинет\"}\r\n              onClick={this.handleItemClick}\r\n              color=\"teal\"\r\n            />\r\n          </Link>\r\n          <Link to=\"/my-courses\">\r\n            <Menu.Item\r\n              name=\"Мои курсы\"\r\n              active={activeItem === \"Мои курсы\"}\r\n              onClick={this.handleItemClick}\r\n              color=\"teal\"\r\n            />\r\n          </Link>\r\n          <Link to=\"/my-teachers\">\r\n            <Menu.Item\r\n              name=\"Мои преподаватели\"\r\n              active={activeItem === \"Мои преподаватели\"}\r\n              onClick={this.handleItemClick}\r\n              color=\"teal\"\r\n            />\r\n          </Link>\r\n          <Link to=\"/all-courses\">\r\n            <Menu.Item\r\n              name=\"Другие курсы\"\r\n              active={activeItem === \"Другие курсы\"}\r\n              onClick={this.handleItemClick}\r\n              color=\"teal\"\r\n            />\r\n          </Link>\r\n        </Menu>\r\n      </Grid.Column>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { DataService } from \"../../services/data-service\";\r\nimport { Table, Progress, Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Tcourse extends Component {\r\n  data = new DataService();\r\n  state = {\r\n    data: []\r\n  };\r\n  courses = [];\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateInfo();\r\n  }\r\n\r\n  updateInfo() {\r\n    this.data\r\n      .getCourseByTeacher()\r\n      .then(res => {\r\n        this.courses = res.courses.map(n => {\r\n          let pd = \"В процессе\";\r\n          switch (n.progress) {\r\n            case 0:\r\n              pd = \"Не приступал\";\r\n              break;\r\n            case 100:\r\n              pd = \"Завершено\";\r\n              break;\r\n          }\r\n\r\n          return (\r\n            <Table.Row key={n.id}>\r\n              <Table.Cell>{n.name}</Table.Cell>\r\n              <Table.Cell width=\"4\">\r\n                <Button fluid color={\"green\"}>\r\n                  Добавить\r\n                </Button>\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          );\r\n        });\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          data: res\r\n        });\r\n        return res;\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Table celled size=\"large\">\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Курс</Table.HeaderCell>\r\n\r\n              <Table.HeaderCell>Прогресс</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>{this.courses}</Table.Body>\r\n\r\n          <Table.Footer>\r\n            <Table.Row>\r\n              <Table.HeaderCell colSpan=\"3\"></Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Footer>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Header,\r\n  Icon,\r\n  Table,\r\n  Label,\r\n  Button,\r\n  Card,\r\n  Container\r\n} from \"semantic-ui-react\";\r\n\r\nimport { DataService } from \"../services/data-service\";\r\nimport { Link, withRouter, Route, Switch } from \"react-router-dom\";\r\nimport Tcourse from \"../component/t-course/t-course\";\r\nclass MyTeachers extends Component {\r\n  data = new DataService();\r\n  state = {\r\n    data: []\r\n  };\r\n  teachers = [];\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateInfo();\r\n  }\r\n  updateInfo() {\r\n    this.data\r\n      .getMyTeachers()\r\n      .then(res => {\r\n        this.teachers = res.map(n => {\r\n          return (\r\n            <Card\r\n              header={n.name}\r\n              description={n.description}\r\n              extra={\r\n                <Link to={`${this.props.match.path}/${n.id}`}>\r\n                  <Icon name=\"book\" /> {n.coursesCount} {\"курса \"}\r\n                </Link>\r\n              }\r\n            />\r\n          );\r\n        });\r\n      })\r\n      .then(res => {\r\n        this.setState({});\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header as=\"h1\" color={\"red\"} textAlign=\"center\">\r\n          Преподаватели\r\n        </Header>\r\n        <h4 class=\"ui horizontal divider\">\r\n          <i class=\"angle down red icon\"></i>\r\n        </h4>\r\n        <Switch>\r\n          <Route path={`${this.props.match.url}/:id`}>\r\n            <Tcourse />\r\n          </Route>\r\n          <Route path={this.props.match.url}>\r\n            <Card.Group textAlign=\"center\">{this.teachers}</Card.Group>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst T = withRouter(MyTeachers);\r\nexport default T;\r\n","import MyTeachers from \"../pages/my-teachers\";\r\n\r\nconst userInfo = {\r\n  name: \"Иванов Иван Иванович\",\r\n  location: \"Уфа\",\r\n  university: \"УГАТУ\",\r\n  email: \"example@mail.ru\",\r\n  site: \"vk.com/BestMotherFucker\"\r\n};\r\n\r\nconst studentsTabel = [\r\n  {\r\n    group: \"ПРО-499\",\r\n    subjects: [\r\n      {\r\n        name: \"ООП\",\r\n        students: [\r\n          {\r\n            id: 1,\r\n            name: \"Анатольев Анатолий Анатолиевич\",\r\n            labs: 2,\r\n            test: 1,\r\n            video: 7,\r\n            lecture: 9\r\n          },\r\n          {\r\n            id: 2,\r\n            name: \"Григорьев Григорий Григориевич\",\r\n            labs: 2,\r\n            test: 1,\r\n            video: 7,\r\n            lecture: 9\r\n          }\r\n        ],\r\n        allLabs: 6,\r\n        allTest: 5,\r\n        allVideo: 18,\r\n        allLecture: 15\r\n      }\r\n    ]\r\n  }\r\n];\r\nconst StudentById = {\r\n  id: 2,\r\n  firstName: \"Rail1\",\r\n  lastName: \"Sham1\",\r\n  login: \"Rail.Ss1\",\r\n  password: \"pass1\",\r\n  email: \"rail@mail.ru1\",\r\n  birthDate: null,\r\n  role: \"TEACHER\",\r\n  memo:\r\n    \"Я живу и работаю в Уфе <br> <a href=''>mysite.com</a> <br> <a href=''>vk.com/bb_king</a> \"\r\n};\r\nconst subjects = [\r\n  {\r\n    name: \"ООП\"\r\n  },\r\n  {\r\n    name: \"ФЛП\"\r\n  }\r\n];\r\n\r\nconst myCourses = [\r\n  {\r\n    id: 0,\r\n    name: \"Базы данных\",\r\n    teacher: \"Иванов Иван Иванович\",\r\n    progress: 60\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Методы вычисления\",\r\n    teacher: \"Петров Пётр петрович\",\r\n    progress: 0\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    name: \"Инженерия знаний\",\r\n    teacher: \"Алексеев Алексей Алексеевич\",\r\n    progress: 100\r\n  }\r\n];\r\n\r\nconst myTeacher = [\r\n  {\r\n    id: 1,\r\n    name: \"Ivanov Ivan\",\r\n\r\n    description:\r\n      \"Заслуженный деятетль искусств республики Дагестан, трижды судим, депутат городского совета Верхнего Волочка\",\r\n    coursesCount: 3\r\n  }\r\n];\r\n\r\nconst courseDetail = [\r\n  {\r\n    id: 0,\r\n    name: \"Базы данных\",\r\n    teacher: \"Иванов Иван Иванович\",\r\n    progress: 60,\r\n    topics: [\r\n      {\r\n        id: 0,\r\n        name: \"Иерархическая модель\",\r\n        text:\r\n          \"Иерархические базы данных могут быть представлены как дерево, состоящее из объектов различных уровней. Верхний уровень занимает один объект, второй — объекты второго уровня и т. д. Между объектами существуют связи, каждый объект может включать в себя несколько объектов более низкого уровня. Такие объекты находятся в отношении предка (объект более близкий к корню) к потомку (объект более низкого уровня), при этом возможна ситуация, когда объект-предок не имеет потомков или имеет их несколько, тогда как у объекта-потомка обязательно только один предок. Объекты, имеющие общего предка, называются близнецами.\",\r\n        progress: 40,\r\n        tests: [\"id1\", \"id2\"]\r\n      },\r\n      {\r\n        id: 1,\r\n        name: \"Нормальная форма\",\r\n        text:\r\n          \"Иерархические базы данных могут быть представлены как дерево, состоящее из объектов различных уровней. Верхний уровень занимает один объект, второй — объекты второго уровня и т. д. Между объектами существуют связи, каждый объект может включать в себя несколько объектов более низкого уровня. Такие объекты находятся в отношении предка (объект более близкий к корню) к потомку (объект более низкого уровня), при этом возможна ситуация, когда объект-предок не имеет потомков или имеет их несколько, тогда как у объекта-потомка обязательно только один предок. Объекты, имеющие общего предка, называются близнецами.\",\r\n        progress: 40,\r\n        tests: [\"id1\", \"id2\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Методы вычисления\",\r\n    teacher: \"Петров Пётр петрович\",\r\n    progress: 0\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    name: \"Инженерия знаний\",\r\n    teacher: \"Алексеев Алексей Алексеевич\",\r\n    progress: 100\r\n  }\r\n];\r\n\r\n///\r\nconst gcourse = {\r\n  courses: [\r\n    {\r\n      id: 1,\r\n      name: \"Course A\",\r\n      level: \"Beginner\",\r\n      description: \"A description\",\r\n      _teacher: \"Ivanov Ivan\",\r\n      _progress: 60\r\n    }\r\n  ]\r\n};\r\n\r\nconst gThemes = {\r\n  themes: [\r\n    {\r\n      id: 1,\r\n      name: \"Theme A1\"\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Theme A2\"\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Theme A3\"\r\n    }\r\n  ],\r\n  statuses: {\r\n    \"1\": true,\r\n    \"2\": false,\r\n    \"3\": false\r\n  }\r\n};\r\n\r\nconst gTasks = [\r\n  {\r\n    tests: [\r\n      {\r\n        id: 1,\r\n        name: \"Test A11\"\r\n      }\r\n    ],\r\n    lectures: [\r\n      {\r\n        id: 1,\r\n        name: \"Lecture A11\",\r\n        description: \"Aecription A11\",\r\n        content: \"Aontent A11\"\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Lecture A12\",\r\n        description: \"Aecription A12\",\r\n        content: \"Aontent A12\"\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Lecture A12\",\r\n        description: \"Aecription A13\",\r\n        content: \"Aontent A13\"\r\n      }\r\n    ],\r\n    statuses: {\r\n      \"t-status\": [1],\r\n      \"l-status\": [1]\r\n    }\r\n  }\r\n];\r\n\r\nconst lecture = {\r\n  id: 1,\r\n  name: \"Lecture name 1\",\r\n  content: {\r\n    text: \"<p>some text width <strong>HTML</strong></p>\"\r\n  }\r\n};\r\n\r\nconst allCourse = {\r\n  courses: [\r\n    {\r\n      id: 1,\r\n      name: \"Course A\",\r\n      level: \"Beginner\",\r\n      description: \"A description\"\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Course B\",\r\n      level: \"Beginner\",\r\n      description: \"B description\"\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"Course C\",\r\n      level: \"Beginner\",\r\n      description: \"C description\"\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"Course D\",\r\n      level: \"Intermediate\",\r\n      description: \"D description\"\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"Course E\",\r\n      level: \"Intermediate\",\r\n      description: \"E description\"\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"Course F\",\r\n      level: \"Intermediate\",\r\n      description: \"F description\"\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"Course G\",\r\n      level: \"Advanced\",\r\n      description: \"G description\"\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"Course H\",\r\n      level: \"Advanced\",\r\n      description: \"H description\"\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"Course J\",\r\n      level: \"Advanced\",\r\n      description: \"J description\"\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"My course\",\r\n      level: \"Beginner\",\r\n      description: \"my course!\"\r\n    }\r\n  ]\r\n};\r\n\r\nconst teacherCourse = {\r\n  courses: [\r\n    {\r\n      id: 3,\r\n      name: \"Course C\",\r\n      level: \"Beginner\",\r\n      description: \"C description\"\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"Course A\",\r\n      level: \"Beginner\",\r\n      description: \"A description\"\r\n    },\r\n    {\r\n      id: 10,\r\n      name: \"My course\",\r\n      level: \"Beginner\",\r\n      description: \"my course!\"\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"Course B\",\r\n      level: \"Beginner\",\r\n      description: \"B description\"\r\n    }\r\n  ]\r\n};\r\n///\r\nexport class DataService {\r\n  async getUserInfo() {\r\n    return userInfo;\r\n  }\r\n  async getMyTeachers() {\r\n    return myTeacher;\r\n  }\r\n  async getSubjects() {\r\n    return subjects;\r\n  }\r\n  async getCourseById(id) {\r\n    return courseDetail[0];\r\n  }\r\n  async getCourseTexById(id = 0, id2 = 0) {\r\n    return courseDetail[id].topics[id2].text;\r\n  }\r\n\r\n  async _getMyCourses() {\r\n    return gcourse;\r\n  }\r\n\r\n  async getStudent(id) {\r\n    return StudentById;\r\n  }\r\n\r\n  async getThemes(id) {\r\n    return gThemes;\r\n  }\r\n\r\n  async getTasks(id) {\r\n    return gTasks[id - 1];\r\n  }\r\n  async getLecture() {\r\n    return lecture;\r\n  }\r\n  async getAllCourse() {\r\n    return allCourse;\r\n  }\r\n  async getCourseByTeacher(id) {\r\n    return teacherCourse;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { withRouter } from \"react-router\";\r\nimport { Header, Button, Label, Divider } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DataService } from \"../services/data-service\";\r\n\r\nclass Cc extends React.Component {\r\n  tt;\r\n  data = new DataService();\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null\r\n    };\r\n    this.Update();\r\n  }\r\n\r\n  Update() {\r\n    this.data.getCourseById().then(res => {\r\n      this.tt = (\r\n        <div>\r\n          <Header as=\"h1\" color=\"teal\">\r\n            {res.topics[this.props.match.params.id].name}\r\n          </Header>\r\n          {res.topics[this.props.match.params.id].text}\r\n          <Divider horizontal>Задания</Divider>\r\n\r\n          {res.topics[this.props.match.params.id].tests.map(n => {\r\n            return (\r\n              <Link key={n} to={`/tests/${n}`}>\r\n                <Button color=\"teal\">\r\n                  Тест № <Label>{n}</Label>\r\n                </Button>\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { match, location, history } = this.props;\r\n    const card = this.tt;\r\n    console.log(match);\r\n\r\n    return (\r\n      <div>\r\n        You are now at {location.pathname}\r\n        <Header size=\"large\" color=\"teal\" textAlign=\"center\"></Header>\r\n        {this.tt}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const TopicPage = withRouter(Cc);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter, Route, Switch } from \"react-router\";\r\nimport { Header, Card, Image, Icon, Container } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DataService } from \"../services/data-service\";\r\nimport { TopicPage } from \"./topic\";\r\n\r\nconst topics = [\r\n  {\r\n    id: 0,\r\n    name: \"Базы данных\",\r\n    teacher: \"Иванов Иван Иванович\",\r\n    progress: 60,\r\n    topics: [\r\n      {\r\n        id: 0,\r\n        name: \"Иерархическая модель\",\r\n        text:\r\n          \"Иерархические базы данных могут быть представлены как дерево, состоящее из объектов различных уровней. Верхний уровень занимает один объект, второй — объекты второго уровня и т. д. Между объектами существуют связи, каждый объект может включать в себя несколько объектов более низкого уровня. Такие объекты находятся в отношении предка (объект более близкий к корню) к потомку (объект более низкого уровня), при этом возможна ситуация, когда объект-предок не имеет потомков или имеет их несколько, тогда как у объекта-потомка обязательно только один предок. Объекты, имеющие общего предка, называются близнецами.\",\r\n        progress: 40,\r\n        tests: [\"id1\", \"id2\"]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nclass C extends React.Component {\r\n  tt;\r\n  data = new DataService();\r\n  state = {\r\n    data: []\r\n  };\r\n  courses = [];\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateInfo();\r\n  }\r\n  updateInfo() {\r\n    this.data\r\n      .getCourseById(this.props.match.params.id)\r\n      .then(res => {\r\n        this.tt = res.topics.map(n => {\r\n          return (\r\n            <Card key={n.id} color=\"red\">\r\n              <Card.Content>\r\n                <Card.Header>{n.name}</Card.Header>\r\n                <Card.Meta>\r\n                  <span className=\"date\">тема </span>\r\n                </Card.Meta>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Link to={`${this.props.location.pathname}/${n.id}`}>\r\n                  <Icon name=\"book\" />1 статья и 2 теста\r\n                </Link>\r\n              </Card.Content>\r\n            </Card>\r\n          );\r\n        });\r\n        return res;\r\n      })\r\n      .then(res => {\r\n        this.setState({\r\n          data: res\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    const { match, location, history } = this.props;\r\n    const card = this.tt;\r\n    return (\r\n      <div>\r\n        <Switch>\r\n          <Route path={`${match.url}/:id`}>\r\n            <TopicPage />\r\n          </Route>\r\n          <Route path={`${match.url}/`}>\r\n            <Container fluid textAlign=\"center\">\r\n              <Header size=\"large\" color=\"teal\" textAlign=\"center\"></Header>\r\n              <Card.Group textAlign=\"center\">{card}</Card.Group>\r\n            </Container>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Course = withRouter(C);\r\n","import React, { Component } from \"react\";\r\nimport { DataService } from \"../../services/data-service\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Header, Divider, Segment, Button } from \"semantic-ui-react\";\r\n\r\nclass _Lecture extends Component {\r\n  data = new DataService();\r\n  state = {\r\n    id: null,\r\n    name: null,\r\n    content: null,\r\n    onLoad: false,\r\n    theme_id: this.props.match.params.id\r\n  };\r\n  content = \"\";\r\n  constructor(props) {\r\n    super(props);\r\n    this.update();\r\n  }\r\n  update = () => {\r\n    this.data.getLecture().then(res => {\r\n      this.setState({\r\n        id: res.id,\r\n        name: res.name,\r\n        content: res.content,\r\n        onLoad: true\r\n      });\r\n    });\r\n  };\r\n  createMarkup() {\r\n    return { __html: this.state.content.text };\r\n  }\r\n  render() {\r\n    if (this.state.onLoad) {\r\n      this.content = (\r\n        <div>\r\n          <Header>{this.state.name}</Header>\r\n          <Divider hidden></Divider>\r\n          <div dangerouslySetInnerHTML={this.createMarkup()} />\r\n          <Segment>\r\n            <Header>Практика</Header>\r\n            <p>1. Какое - нибудь практическое задание </p>\r\n            <p>2 .Ещё одно какое - нибудь практическое задание</p>\r\n            <form\r\n              className=\"ui form\"\r\n              action=\"\"\r\n              enctype=\"multipart/form-data\"\r\n              method=\"post\"\r\n            >\r\n              <div className=\"field\">\r\n                <p>Загрузите файл с ответами и преподаватель их проверит </p>\r\n                <div className=\"ui left icon input\">\r\n                  <input type=\"file\" name=\"file\" />\r\n                  <i class=\"file icon\"></i>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <div>\r\n                  <button className=\"ui animated button basic teal fluid\">\r\n                    отправить файл\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </Segment>\r\n        </div>\r\n      );\r\n    }\r\n    return <div>{this.content}</div>;\r\n  }\r\n}\r\n\r\nconst Lecture = withRouter(_Lecture);\r\n\r\nexport default Lecture;\r\n","import React, { Component } from \"react\";\r\nimport { Link, Route, Switch, withRouter } from \"react-router-dom\";\r\nimport {\r\n  Header,\r\n  Icon,\r\n  Table,\r\n  Label,\r\n  Button,\r\n  Progress,\r\n  Container\r\n} from \"semantic-ui-react\";\r\nimport { DataService } from \"../../services/data-service\";\r\nimport Lecture from \"../lecture/lecture\";\r\n\r\nclass _Tasks extends Component {\r\n  data = new DataService();\r\n  state = {\r\n    data: [],\r\n    course_id: this.props.course_id,\r\n    theme_id: this.props.match.params.id\r\n  };\r\n  lectures = [];\r\n  tests = [];\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateInfo();\r\n  }\r\n\r\n  updateInfo() {\r\n    this.data\r\n      .getTasks(this.props.match.params.id)\r\n      .then(res => {\r\n        const status = res.statuses;\r\n\r\n        this.lectures = res.lectures.map(n => {\r\n          let ic = \"close\";\r\n          let c = \"red\";\r\n          if (status[\"l-status\"].find(r => r === n.id) !== undefined) {\r\n            ic = \"checkmark\";\r\n            c = \"green\";\r\n          }\r\n          return (\r\n            <Table.Row key={n.id}>\r\n              <Table.Cell>\r\n                <Link to={`${document.location.pathname.slice(8)}/${n.id}`}>\r\n                  {n.name}\r\n                </Link>\r\n              </Table.Cell>\r\n\r\n              <Table.Cell width=\"1\" textAlign=\"center\">\r\n                <Icon name={ic} color={c} />\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          );\r\n        });\r\n        this.tests = res.tests.map(n => {\r\n          let ic = \"close\";\r\n          let c = \"red\";\r\n          if (status[\"l-status\"].find(r => r === n.id) !== undefined) {\r\n            ic = \"checkmark\";\r\n            c = \"green\";\r\n          }\r\n          return (\r\n            <Table.Row key={n.id}>\r\n              <Table.Cell>\r\n                <Link to={`${document.location.pathname.slice(8)}/${n.id}`}>\r\n                  {n.name}\r\n                </Link>\r\n              </Table.Cell>\r\n\r\n              <Table.Cell width=\"1\" textAlign=\"center\">\r\n                <Icon name={ic} color={c} />\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          );\r\n        });\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          data: res\r\n        });\r\n        return res;\r\n      });\r\n  }\r\n  render() {\r\n    console.log(this.courses);\r\n    return (\r\n      <div>\r\n        <Header as=\"h1\" color={\"red\"} textAlign=\"center\">\r\n          Задания\r\n        </Header>\r\n        <h4 class=\"ui horizontal divider\">\r\n          <i class=\"angle down red icon\"></i>\r\n        </h4>\r\n        <Switch>\r\n          <Route path={`${this.props.match.url}/:id`}>\r\n            <Lecture />\r\n          </Route>\r\n          <Route path=\"/:id\">\r\n            <Table celled size=\"large\">\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>\r\n                    {\" \"}\r\n                    <Icon name=\"file alternate outline\" />\r\n                    Лекции\r\n                  </Table.HeaderCell>\r\n\r\n                  <Table.HeaderCell>Статус</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n\r\n              <Table.Body>{this.lectures}</Table.Body>\r\n\r\n              <Table.Footer>\r\n                <Table.Row>\r\n                  <Table.HeaderCell colSpan=\"3\"></Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Footer>\r\n            </Table>\r\n            <Table celled size=\"large\">\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>\r\n                    <Icon name=\"tasks\" />\r\n                    Тесты\r\n                  </Table.HeaderCell>\r\n\r\n                  <Table.HeaderCell>Статус</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n\r\n              <Table.Body>{this.tests}</Table.Body>\r\n\r\n              <Table.Footer>\r\n                <Table.Row>\r\n                  <Table.HeaderCell colSpan=\"3\"></Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Footer>\r\n            </Table>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Tasks = withRouter(_Tasks);\r\n\r\nexport default Tasks;\r\n","import React, { Component } from \"react\";\r\nimport { Link, Route, Switch, withRouter } from \"react-router-dom\";\r\nimport {\r\n  Header,\r\n  Icon,\r\n  Table,\r\n  Label,\r\n  Button,\r\n  Progress,\r\n  Container\r\n} from \"semantic-ui-react\";\r\nimport { DataService } from \"../services/data-service\";\r\n\r\nimport Theme from \"../component/theme/theme\";\r\n\r\nclass Division extends Component {\r\n  data = new DataService();\r\n  state = {\r\n    data: [],\r\n    courses: \"\",\r\n    coure_id: this.props.match.params.id\r\n  };\r\n  courses = [];\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateInfo();\r\n  }\r\n\r\n  updateInfo() {\r\n    this.data\r\n      .getThemes()\r\n      .then(res => {\r\n        this.setState({\r\n          status: \"load\"\r\n        });\r\n        const status = res.statuses;\r\n        this.courses = res.themes.map(n => {\r\n          let pd = \"ban\";\r\n          let cl = \"red\";\r\n          switch (status[n.id]) {\r\n            case false:\r\n              pd = \"close\";\r\n\r\n              break;\r\n            case true:\r\n              pd = \"checkmark\";\r\n              cl = \"green\";\r\n              break;\r\n          }\r\n\r\n          return (\r\n            <Table.Row key={n.id}>\r\n              <Table.Cell>\r\n                <Link to={`${document.location.pathname.slice(8)}/${n.id}`}>\r\n                  {n.name}\r\n                </Link>\r\n              </Table.Cell>\r\n\r\n              <Table.Cell width=\"1\" textAlign=\"center\">\r\n                <Icon name={pd} color={cl} />\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          );\r\n        });\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          courses: this.courses\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    console.log(this.props.match);\r\n    return (\r\n      <div>\r\n        <Header as=\"h1\" color={\"red\"} textAlign=\"center\">\r\n          Темы\r\n        </Header>\r\n        <h4 class=\"ui horizontal divider\">\r\n          <i class=\"angle down red icon\"></i>\r\n        </h4>\r\n        <Switch>\r\n          <Route path={`${this.props.match.url}/:id`}>\r\n            <Theme course_id={this.state.coure_id} />\r\n          </Route>\r\n          <Route path={this.props.match.url}>\r\n            <Table celled size=\"large\" st={this.state.status}>\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>Тема</Table.HeaderCell>\r\n\r\n                  <Table.HeaderCell>Статус</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n\r\n              <Table.Body st={this.state.status}>{this.courses}</Table.Body>\r\n\r\n              <Table.Footer>\r\n                <Table.Row>\r\n                  <Table.HeaderCell colSpan=\"3\"></Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Footer>\r\n            </Table>\r\n            <Container fluid textAlign=\"center\">\r\n              <Button color=\"teal\">Добавить другие курсы</Button>\r\n            </Container>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst Divisions = withRouter(Division);\r\n\r\nexport default Divisions;\r\n","import React, { Component } from \"react\";\r\nimport { Link, Route, Switch, matchPath } from \"react-router-dom\";\r\nimport {\r\n  Header,\r\n  Icon,\r\n  Table,\r\n  Label,\r\n  Button,\r\n  Progress,\r\n  Container\r\n} from \"semantic-ui-react\";\r\nimport { DataService } from \"../services/data-service\";\r\nimport { Course } from \"./course\";\r\nimport Divisions from \"./divisions\";\r\n\r\nexport default class MyCourses extends Component {\r\n  data = new DataService();\r\n  state = {\r\n    data: []\r\n  };\r\n  courses = [];\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateInfo();\r\n  }\r\n\r\n  updateInfo() {\r\n    this.data\r\n      ._getMyCourses()\r\n      .then(res => {\r\n        this.courses = res.courses.map(n => {\r\n          let pd = \"В процессе\";\r\n          switch (n.progress) {\r\n            case 0:\r\n              pd = \"Не приступал\";\r\n              break;\r\n            case 100:\r\n              pd = \"Завершено\";\r\n              break;\r\n          }\r\n\r\n          return (\r\n            <Table.Row key={n.id}>\r\n              <Table.Cell>\r\n                <Link to={`/my-courses/${n.id}`}>{n.name}</Link>\r\n              </Table.Cell>\r\n              <Table.Cell>{n._teacher}</Table.Cell>\r\n              <Table.Cell>\r\n                <Progress\r\n                  percent={n._progress}\r\n                  progress\r\n                  indicating\r\n                  label={pd}\r\n                />\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          );\r\n        });\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          data: res\r\n        });\r\n        return res;\r\n      });\r\n  }\r\n  render() {\r\n    console.log(this.courses);\r\n    console.log(matchPath);\r\n    return (\r\n      <div>\r\n        <Header as=\"h1\" color={\"red\"} textAlign=\"center\">\r\n          Мои курсы\r\n        </Header>\r\n        <h4 class=\"ui horizontal divider\">\r\n          <i class=\"angle down red icon\"></i>\r\n        </h4>\r\n        <Switch>\r\n          <Route path=\"/my-courses/:id\">\r\n            <Divisions />\r\n          </Route>\r\n          <Route path=\"/my-courses\">\r\n            <Table celled size=\"large\">\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>Курс</Table.HeaderCell>\r\n                  <Table.HeaderCell>Преподаватель</Table.HeaderCell>\r\n                  <Table.HeaderCell>Прогресс</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n\r\n              <Table.Body>{this.courses}</Table.Body>\r\n\r\n              <Table.Footer>\r\n                <Table.Row>\r\n                  <Table.HeaderCell colSpan=\"3\"></Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Footer>\r\n            </Table>\r\n            <Container fluid textAlign=\"center\">\r\n              <Button color=\"teal\">Добавить другие курсы</Button>\r\n            </Container>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Header,\r\n  Icon,\r\n  Table,\r\n  Label,\r\n  Button,\r\n  Card,\r\n  Container\r\n} from \"semantic-ui-react\";\r\nimport { DataService } from \"../services/data-service\";\r\n\r\nexport default class AllCourses extends Component {\r\n  data = new DataService();\r\n  el = \"\";\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      d: null\r\n    };\r\n    this.update();\r\n  }\r\n  AddCourse = id => {\r\n    alert(\"Пошёл запрос на добавление курса под номером \" + id);\r\n  };\r\n  update = () => {\r\n    this.data\r\n      .getAllCourse()\r\n      .then(res => {\r\n        this.el = res.courses.map(n => {\r\n          return (\r\n            <Card color=\"red\" key={n.id}>\r\n              <Card.Content>\r\n                <Card.Header>\r\n                  <Header as=\"h2\" color=\"teal\">\r\n                    {n.name}\r\n                  </Header>\r\n                </Card.Header>\r\n                <Card.Meta>{n.level}</Card.Meta>\r\n                <Card.Description>{n.description}</Card.Description>\r\n              </Card.Content>\r\n              <Card.Content extra textAlign=\"center\">\r\n                <Button onClick={() => this.AddCourse(n.id)} color=\"teal\">\r\n                  Добавить\r\n                </Button>\r\n              </Card.Content>\r\n            </Card>\r\n          );\r\n        });\r\n      })\r\n      .then(res => {\r\n        this.setState({\r\n          d: this.el\r\n        });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header as=\"h1\" color={\"red\"} textAlign=\"center\">\r\n          Все курсы\r\n        </Header>\r\n        <h4 class=\"ui horizontal divider\">\r\n          <i class=\"angle down red icon\"></i>\r\n        </h4>\r\n\r\n        <Card.Group textAlign=\"center\">\r\n          {\" \"}\r\n          {this.el}\r\n          <Card color=\"red\">\r\n            <Card.Content>\r\n              <Card.Header>\r\n                <Header as=\"h2\" color=\"teal\">\r\n                  ООП\r\n                </Header>\r\n              </Card.Header>\r\n              <Card.Meta>пишем первую программу</Card.Meta>\r\n              <Card.Description>\r\n                Вот вы вошли в компизицую с гробами\r\n              </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra textAlign=\"center\">\r\n              <Button color=\"teal\">Добавить</Button>\r\n            </Card.Content>\r\n          </Card>\r\n        </Card.Group>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Tab, Message, Icon, Header } from \"semantic-ui-react\";\r\nimport { DataService } from \"../services/data-service\";\r\n\r\nconst ListIcon = props => {\r\n  function createMarkup() {\r\n    return { __html: props.memo };\r\n  }\r\n  return (\r\n    <div>\r\n      <Header as=\"h2\" color=\"teal\">\r\n        {props.name}\r\n      </Header>\r\n      <Message>\r\n        <Message.Header>Информация о себе</Message.Header>\r\n        <p dangerouslySetInnerHTML={createMarkup()}></p>\r\n      </Message>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default class LK extends Component {\r\n  data = new DataService();\r\n  state = {\r\n    name: null,\r\n    location: null,\r\n    email: null,\r\n    site: null\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateInfo();\r\n  }\r\n\r\n  updateInfo() {\r\n    this.data.getStudent(2).then(res => {\r\n      this.setState({\r\n        name: `${res.firstName} ${res.lastName}`,\r\n        memo: res.memo\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header as=\"h1\" color={\"red\"} textAlign=\"center\">\r\n          Личный кабинет\r\n        </Header>\r\n        <h4 class=\"ui horizontal divider\">\r\n          <i class=\"angle down red icon\"></i>\r\n        </h4>\r\n        <ListIcon name={this.state.name} memo={this.state.memo} />\r\n        <h2 class=\"ui horizontal divider teal\">\r\n          <Header as=\"h3\" color=\"teal\" textAlign=\"center\">\r\n            <Icon name=\" settings\" /> Настройки\r\n          </Header>\r\n        </h2>\r\n        <p>\r\n          Сайт работает в тестовом режиме, часть функционала будет реализована в\r\n          ближайшее время\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter, Route, Switch } from \"react-router\";\r\nimport {\r\n  Header,\r\n  Card,\r\n  Image,\r\n  Icon,\r\n  Container,\r\n  Button,\r\n  Label,\r\n  Divider\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DataService } from \"../services/data-service\";\r\n\r\nconst topics = [\r\n  {\r\n    id: 0,\r\n    name: \"Базы данных\",\r\n    teacher: \"Иванов Иван Иванович\",\r\n    progress: 60,\r\n    topics: [\r\n      {\r\n        id: 0,\r\n        name: \"Иерархическая модель\",\r\n        text:\r\n          \"Иерархические базы данных могут быть представлены как дерево, состоящее из объектов различных уровней. Верхний уровень занимает один объект, второй — объекты второго уровня и т. д. Между объектами существуют связи, каждый объект может включать в себя несколько объектов более низкого уровня. Такие объекты находятся в отношении предка (объект более близкий к корню) к потомку (объект более низкого уровня), при этом возможна ситуация, когда объект-предок не имеет потомков или имеет их несколько, тогда как у объекта-потомка обязательно только один предок. Объекты, имеющие общего предка, называются близнецами.\",\r\n        progress: 40,\r\n        tests: [\"id1\", \"id2\"]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nclass Tt extends React.Component {\r\n  // tt;\r\n  // data = new DataService();\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.setState({\r\n  //     data: null\r\n  //   });\r\n  //   this.Update();\r\n  // }\r\n\r\n  // Update() {\r\n  //   this.data.getCourseById().then(res => {\r\n  //     this.tt = (\r\n  //       <div>\r\n  //         <Header as=\"h1\" color=\"teal\">\r\n  //           {res.topics[this.props.match.params.id].name}\r\n  //         </Header>\r\n  //         {res.topics[this.props.match.params.id].text}\r\n  //         <Divider horizontal>Задания</Divider>\r\n\r\n  //         {res.topics[this.props.match.params.id].tests.map(n => {\r\n  //           return (\r\n  //             <Link to={`/tests/${n}`}>\r\n  //               <Button color=\"teal\">\r\n  //                 Тест № <Label>{n}</Label>\r\n  //               </Button>\r\n  //             </Link>\r\n  //           );\r\n  //         })}\r\n  //       </div>\r\n  //     );\r\n  //   });\r\n  // }\r\n\r\n  render() {\r\n    const { match, location, history } = this.props;\r\n    console.log(match);\r\n\r\n    return (\r\n      <div>\r\n        <Button onClick={() => window.history.back()} color=\"red\">\r\n          <Header color=\"black\" inverted>\r\n            Закрыть тест\r\n          </Header>\r\n        </Button>\r\n        You are now at {location.pathname}\r\n        <Header size=\"large\" color=\"teal\" icon=\"close\" textAlign=\"center\">\r\n          as\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const TestsPage = withRouter(Tt);\r\n","import React from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport Navigation from \"./component/navigation/navigation\";\r\nimport { Grid, Segment } from \"semantic-ui-react\";\r\nimport MyCourses from \"./pages/my-courses\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport MyTeachers from \"./pages/my-teachers\";\r\nimport AllCourses from \"./pages/all-courses\";\r\nimport LK from \"./pages/lk\";\r\nimport { TestsPage } from \"./pages/tests\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename=\"/student\">\r\n      <div className=\"App\">\r\n        <Grid>\r\n          <Navigation />\r\n          <Grid.Column width={13}>\r\n            <Segment>\r\n              <Switch>\r\n                <Route path=\"/my-courses/\">\r\n                  <MyCourses />\r\n                </Route>\r\n                <Route path=\"/my-teachers\">\r\n                  <MyTeachers />\r\n                </Route>\r\n                <Route path=\"/all-courses\">\r\n                  <AllCourses />\r\n                </Route>\r\n                <Route path=\"/tests/:id\">\r\n                  <TestsPage />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <LK />\r\n                </Route>\r\n              </Switch>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}