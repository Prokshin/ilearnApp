{"version":3,"sources":["component/navigation/navigation.js","pages/my-teachers.js","services/data-service.js","pages/topic.js","pages/course.js","pages/my-courses.js","pages/all-courses.js","pages/lk.js","pages/tests.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","state","activeItem","handleItemClick","e","name","setState","this","Grid","Column","width","Header","as","icon","color","textAlign","Icon","Menu","pointing","secondary","vertical","fluid","to","Item","active","onClick","Component","MyTeachers","props","data","DataService","teachers","updateInfo","getMyTeachers","then","res","map","n","Card","image","header","meta","location","description","extra","coursesCount","class","Container","Group","userInfo","university","email","site","subjects","myCourses","id","teacher","progress","myTeacher","courseDetail","topics","text","tests","id2","Cc","Update","getCourseById","tt","match","params","Divider","horizontal","key","Button","Label","history","console","log","pathname","size","React","TopicPage","withRouter","C","courses","Content","Meta","className","card","path","url","Course","MyCourses","getMyCourses","pd","Table","Row","Cell","Progress","percent","indicating","label","celled","HeaderCell","Body","Footer","colSpan","arr","push","Description","disabled","i","AllCourses","ListIcon","List","href","LK","getUserInfo","Tt","window","back","inverted","TestsPage","App","Segment","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c39701cc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Grid, Menu, Header, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nexport default class Navigation extends Component {\r\n  state = { activeItem: \"Личный кабинет\" };\r\n\r\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\r\n\r\n  render() {\r\n    const { activeItem } = this.state;\r\n\r\n    return (\r\n      <Grid.Column width={3}>\r\n        <Header as=\"h1\" icon color=\"red\" textAlign=\"center\">\r\n          <Icon name=\"student\" />\r\n          I-learn\r\n        </Header>\r\n        <Menu pointing secondary vertical fluid>\r\n          <Link to=\"/\">\r\n            <Menu.Item\r\n              name=\"Личный кабинет\"\r\n              active={activeItem === \"Личный кабинет\"}\r\n              onClick={this.handleItemClick}\r\n              color=\"teal\"\r\n            />\r\n          </Link>\r\n          <Link to=\"/my-courses\">\r\n            <Menu.Item\r\n              name=\"Мои курсы\"\r\n              active={activeItem === \"Мои курсы\"}\r\n              onClick={this.handleItemClick}\r\n              color=\"teal\"\r\n            />\r\n          </Link>\r\n          <Link to=\"/my-teachers\">\r\n            <Menu.Item\r\n              name=\"Мои преподаватели\"\r\n              active={activeItem === \"Мои преподаватели\"}\r\n              onClick={this.handleItemClick}\r\n              color=\"teal\"\r\n            />\r\n          </Link>\r\n          <Link to=\"/all-courses\">\r\n            <Menu.Item\r\n              name=\"Другие курсы\"\r\n              active={activeItem === \"Другие курсы\"}\r\n              onClick={this.handleItemClick}\r\n              color=\"teal\"\r\n            />\r\n          </Link>\r\n        </Menu>\r\n      </Grid.Column>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Header,\r\n  Icon,\r\n  Table,\r\n  Label,\r\n  Button,\r\n  Card,\r\n  Container\r\n} from \"semantic-ui-react\";\r\nimport { DataService } from \"../services/data-service\";\r\n\r\nconst extra = (\r\n  <a>\r\n    <Icon name=\"book\" />2 Курса\r\n  </a>\r\n);\r\n\r\nexport default class MyTeachers extends Component {\r\n  data = new DataService();\r\n  state = {\r\n    data: []\r\n  };\r\n  teachers = [];\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateInfo();\r\n  }\r\n  updateInfo() {\r\n    this.data\r\n      .getMyTeachers()\r\n      .then(res => {\r\n        this.teachers = res.map(n => {\r\n          return (\r\n            <Card\r\n              image={n.image}\r\n              header={n.name}\r\n              meta={n.location}\r\n              description={n.description}\r\n              extra={\r\n                <a>\r\n                  <Icon name=\"book\" /> {n.coursesCount} {\"курса \"}\r\n                </a>\r\n              }\r\n            />\r\n          );\r\n        });\r\n      })\r\n      .then(res => {\r\n        this.setState({});\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header as=\"h1\" color={\"red\"} textAlign=\"center\">\r\n          Преподаватели\r\n        </Header>\r\n        <h4 class=\"ui horizontal divider\">\r\n          <i class=\"angle down red icon\"></i>\r\n        </h4>\r\n        <Container textAlign=\"center\">\r\n          <Card.Group textAlign=\"center\">{this.teachers}</Card.Group>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import MyTeachers from \"../pages/my-teachers\";\r\n\r\nconst userInfo = {\r\n  name: \"Иванов Иван Иванович\",\r\n  location: \"Уфа\",\r\n  university: \"УГАТУ\",\r\n  email: \"example@mail.ru\",\r\n  site: \"vk.com/BestMotherFucker\"\r\n};\r\n\r\nconst studentsTabel = [\r\n  {\r\n    group: \"ПРО-499\",\r\n    subjects: [\r\n      {\r\n        name: \"ООП\",\r\n        students: [\r\n          {\r\n            id: 1,\r\n            name: \"Анатольев Анатолий Анатолиевич\",\r\n            labs: 2,\r\n            test: 1,\r\n            video: 7,\r\n            lecture: 9\r\n          },\r\n          {\r\n            id: 2,\r\n            name: \"Григорьев Григорий Григориевич\",\r\n            labs: 2,\r\n            test: 1,\r\n            video: 7,\r\n            lecture: 9\r\n          }\r\n        ],\r\n        allLabs: 6,\r\n        allTest: 5,\r\n        allVideo: 18,\r\n        allLecture: 15\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst subjects = [\r\n  {\r\n    name: \"ООП\"\r\n  },\r\n  {\r\n    name: \"ФЛП\"\r\n  }\r\n];\r\n\r\nconst myCourses = [\r\n  {\r\n    id: 0,\r\n    name: \"Базы данных\",\r\n    teacher: \"Иванов Иван Иванович\",\r\n    progress: 60\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Методы вычисления\",\r\n    teacher: \"Петров Пётр петрович\",\r\n    progress: 0\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    name: \"Инженерия знаний\",\r\n    teacher: \"Алексеев Алексей Алексеевич\",\r\n    progress: 100\r\n  }\r\n];\r\n\r\nconst myTeacher = [\r\n  {\r\n    name: \"Иван Иванов\",\r\n    location: \"Уфа, Угату\",\r\n    description:\r\n      \"Заслуженный деятетль искусств республики Дагестан, трижды судим, депутат городского совета Верхнего Волочка\",\r\n    coursesCount: 2,\r\n    image: \"https://react.semantic-ui.com/images/avatar/large/elliot.jpg\"\r\n  },\r\n  {\r\n    name: \"Ержан Ержанов\",\r\n    location: \"Белебей\",\r\n    description: \"Смог проснуться в 12 утра\",\r\n    coursesCount: 222,\r\n    image: \"https://react.semantic-ui.com/images/avatar/large/elliot.jpg\"\r\n  }\r\n];\r\n\r\nconst courseDetail = [\r\n  {\r\n    id: 0,\r\n    name: \"Базы данных\",\r\n    teacher: \"Иванов Иван Иванович\",\r\n    progress: 60,\r\n    topics: [\r\n      {\r\n        id: 0,\r\n        name: \"Иерархическая модель\",\r\n        text:\r\n          \"Иерархические базы данных могут быть представлены как дерево, состоящее из объектов различных уровней. Верхний уровень занимает один объект, второй — объекты второго уровня и т. д. Между объектами существуют связи, каждый объект может включать в себя несколько объектов более низкого уровня. Такие объекты находятся в отношении предка (объект более близкий к корню) к потомку (объект более низкого уровня), при этом возможна ситуация, когда объект-предок не имеет потомков или имеет их несколько, тогда как у объекта-потомка обязательно только один предок. Объекты, имеющие общего предка, называются близнецами.\",\r\n        progress: 40,\r\n        tests: [\"id1\", \"id2\"]\r\n      },\r\n      {\r\n        id: 1,\r\n        name: \"Нормальная форма\",\r\n        text:\r\n          \"Иерархические базы данных могут быть представлены как дерево, состоящее из объектов различных уровней. Верхний уровень занимает один объект, второй — объекты второго уровня и т. д. Между объектами существуют связи, каждый объект может включать в себя несколько объектов более низкого уровня. Такие объекты находятся в отношении предка (объект более близкий к корню) к потомку (объект более низкого уровня), при этом возможна ситуация, когда объект-предок не имеет потомков или имеет их несколько, тогда как у объекта-потомка обязательно только один предок. Объекты, имеющие общего предка, называются близнецами.\",\r\n        progress: 40,\r\n        tests: [\"id1\", \"id2\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    id: 1,\r\n    name: \"Методы вычисления\",\r\n    teacher: \"Петров Пётр петрович\",\r\n    progress: 0\r\n  },\r\n\r\n  {\r\n    id: 2,\r\n    name: \"Инженерия знаний\",\r\n    teacher: \"Алексеев Алексей Алексеевич\",\r\n    progress: 100\r\n  }\r\n];\r\n\r\nexport class DataService {\r\n  async getUserInfo() {\r\n    return userInfo;\r\n  }\r\n  async getMyCourses() {\r\n    return myCourses;\r\n  }\r\n  async getMyTeachers() {\r\n    return myTeacher;\r\n  }\r\n  async getSubjects() {\r\n    return subjects;\r\n  }\r\n  async getCourseById(id) {\r\n    return courseDetail[0];\r\n  }\r\n  async getCourseTexById(id = 0, id2 = 0) {\r\n    return courseDetail[id].topics[id2].text;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport { withRouter } from \"react-router\";\r\nimport { Header, Button, Label, Divider } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DataService } from \"../services/data-service\";\r\n\r\nclass Cc extends React.Component {\r\n  tt;\r\n  data = new DataService();\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null\r\n    };\r\n    this.Update();\r\n  }\r\n\r\n  Update() {\r\n    this.data.getCourseById().then(res => {\r\n      this.tt = (\r\n        <div>\r\n          <Header as=\"h1\" color=\"teal\">\r\n            {res.topics[this.props.match.params.id].name}\r\n          </Header>\r\n          {res.topics[this.props.match.params.id].text}\r\n          <Divider horizontal>Задания</Divider>\r\n\r\n          {res.topics[this.props.match.params.id].tests.map(n => {\r\n            return (\r\n              <Link key={n} to={`/tests/${n}`}>\r\n                <Button color=\"teal\">\r\n                  Тест № <Label>{n}</Label>\r\n                </Button>\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { match, location, history } = this.props;\r\n    const card = this.tt;\r\n    console.log(match);\r\n\r\n    return (\r\n      <div>\r\n        You are now at {location.pathname}\r\n        <Header size=\"large\" color=\"teal\" textAlign=\"center\"></Header>\r\n        {this.tt}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const TopicPage = withRouter(Cc);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter, Route, Switch } from \"react-router\";\r\nimport { Header, Card, Image, Icon, Container } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DataService } from \"../services/data-service\";\r\nimport { TopicPage } from \"./topic\";\r\n\r\nconst topics = [\r\n  {\r\n    id: 0,\r\n    name: \"Базы данных\",\r\n    teacher: \"Иванов Иван Иванович\",\r\n    progress: 60,\r\n    topics: [\r\n      {\r\n        id: 0,\r\n        name: \"Иерархическая модель\",\r\n        text:\r\n          \"Иерархические базы данных могут быть представлены как дерево, состоящее из объектов различных уровней. Верхний уровень занимает один объект, второй — объекты второго уровня и т. д. Между объектами существуют связи, каждый объект может включать в себя несколько объектов более низкого уровня. Такие объекты находятся в отношении предка (объект более близкий к корню) к потомку (объект более низкого уровня), при этом возможна ситуация, когда объект-предок не имеет потомков или имеет их несколько, тогда как у объекта-потомка обязательно только один предок. Объекты, имеющие общего предка, называются близнецами.\",\r\n        progress: 40,\r\n        tests: [\"id1\", \"id2\"]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nclass C extends React.Component {\r\n  tt;\r\n  data = new DataService();\r\n  state = {\r\n    data: []\r\n  };\r\n  courses = [];\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateInfo();\r\n  }\r\n  updateInfo() {\r\n    this.data\r\n      .getCourseById(this.props.match.params.id)\r\n      .then(res => {\r\n        this.tt = res.topics.map(n => {\r\n          return (\r\n            <Card key={n.id} color=\"red\">\r\n              <Card.Content>\r\n                <Card.Header>{n.name}</Card.Header>\r\n                <Card.Meta>\r\n                  <span className=\"date\">тема </span>\r\n                </Card.Meta>\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Link to={`${this.props.location.pathname}/${n.id}`}>\r\n                  <Icon name=\"book\" />1 статья и 2 теста\r\n                </Link>\r\n              </Card.Content>\r\n            </Card>\r\n          );\r\n        });\r\n        return res;\r\n      })\r\n      .then(res => {\r\n        this.setState({\r\n          data: res\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    const { match, location, history } = this.props;\r\n    const card = this.tt;\r\n    return (\r\n      <div>\r\n        <Switch>\r\n          <Route path={`${match.url}/:id`}>\r\n            <TopicPage />\r\n          </Route>\r\n          <Route path={`${match.url}/`}>\r\n            <Container fluid textAlign=\"center\">\r\n              <Header size=\"large\" color=\"teal\" textAlign=\"center\"></Header>\r\n              <Card.Group textAlign=\"center\">{card}</Card.Group>\r\n            </Container>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Course = withRouter(C);\r\n","import React, { Component } from \"react\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport {\r\n  Header,\r\n  Icon,\r\n  Table,\r\n  Label,\r\n  Button,\r\n  Progress,\r\n  Container\r\n} from \"semantic-ui-react\";\r\nimport { DataService } from \"../services/data-service\";\r\nimport { Course } from \"./course\";\r\n\r\nexport default class MyCourses extends Component {\r\n  data = new DataService();\r\n  state = {\r\n    data: []\r\n  };\r\n  courses = [];\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateInfo();\r\n  }\r\n\r\n  updateInfo() {\r\n    this.data\r\n      .getMyCourses()\r\n      .then(res => {\r\n        this.courses = res.map(n => {\r\n          let pd = \"В процессе\";\r\n          switch (n.progress) {\r\n            case 0:\r\n              pd = \"Не приступал\";\r\n              break;\r\n            case 100:\r\n              pd = \"Завершено\";\r\n              break;\r\n          }\r\n\r\n          return (\r\n            <Table.Row key={n.id}>\r\n              <Table.Cell>\r\n                <Link to={`/my-courses/${n.id}`}>{n.name}</Link>\r\n              </Table.Cell>\r\n              <Table.Cell>{n.teacher}</Table.Cell>\r\n              <Table.Cell>\r\n                <Progress percent={n.progress} progress indicating label={pd} />\r\n              </Table.Cell>\r\n            </Table.Row>\r\n          );\r\n        });\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        this.setState({\r\n          data: res\r\n        });\r\n        return res;\r\n      });\r\n  }\r\n  render() {\r\n    console.log(this.courses);\r\n    return (\r\n      <div>\r\n        <Header as=\"h1\" color={\"red\"} textAlign=\"center\">\r\n          Мои курсы\r\n        </Header>\r\n        <h4 class=\"ui horizontal divider\">\r\n          <i class=\"angle down red icon\"></i>\r\n        </h4>\r\n        <Switch>\r\n          <Route path=\"/my-courses/:id\">\r\n            <Course />\r\n          </Route>\r\n          <Route path=\"/my-courses\">\r\n            <Table celled size=\"large\">\r\n              <Table.Header>\r\n                <Table.Row>\r\n                  <Table.HeaderCell>Дисциплина</Table.HeaderCell>\r\n                  <Table.HeaderCell>Преподаватель</Table.HeaderCell>\r\n                  <Table.HeaderCell>прогресс</Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Header>\r\n\r\n              <Table.Body>{this.courses}</Table.Body>\r\n\r\n              <Table.Footer>\r\n                <Table.Row>\r\n                  <Table.HeaderCell colSpan=\"3\"></Table.HeaderCell>\r\n                </Table.Row>\r\n              </Table.Footer>\r\n            </Table>\r\n            <Container fluid textAlign=\"center\">\r\n              <Button color=\"teal\">Добавить другие курсы</Button>\r\n            </Container>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Header,\r\n  Icon,\r\n  Table,\r\n  Label,\r\n  Button,\r\n  Card,\r\n  Container\r\n} from \"semantic-ui-react\";\r\n\r\nconst courses = () => {\r\n  let arr = [];\r\n  arr.push(\r\n    <Card color=\"red\">\r\n      <Card.Content>\r\n        <Card.Header>\r\n          <Header as=\"h2\" color=\"teal\">\r\n            Базы данных\r\n          </Header>\r\n        </Card.Header>\r\n        <Card.Meta>базовый курс</Card.Meta>\r\n        <Card.Description>\r\n          Научись делать сложные запросы и вызывать дьявола\r\n        </Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra textAlign=\"center\">\r\n        <Button color=\"teal\" disabled>\r\n          Добавить\r\n        </Button>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n  for (let i = 0; i < 69; i++) {\r\n    arr.push(\r\n      <Card color=\"red\">\r\n        <Card.Content>\r\n          <Card.Header>\r\n            <Header as=\"h2\" color=\"teal\">\r\n              ООП\r\n            </Header>\r\n          </Card.Header>\r\n          <Card.Meta>Уровень {i + 1}</Card.Meta>\r\n          <Card.Description>\r\n            - Скажи мне три главных слова... -Наследование... Инкапсуляция...\r\n            Полиморфизм\r\n          </Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra textAlign=\"center\">\r\n          <Button color=\"teal\">Добавить</Button>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n  }\r\n  arr.push(\r\n    <Card color=\"red\">\r\n      <Card.Content>\r\n        <Card.Header>\r\n          <Header as=\"h2\" color=\"teal\">\r\n            ООП\r\n          </Header>\r\n        </Card.Header>\r\n        <Card.Meta>пишем первую программу</Card.Meta>\r\n        <Card.Description>Вот вы вошли в компизицую с гробами</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra textAlign=\"center\">\r\n        <Button color=\"teal\" disabled>\r\n          Добавить\r\n        </Button>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n\r\n  return arr;\r\n};\r\n\r\nexport default class AllCourses extends Component {\r\n  render() {\r\n    console.log(courses);\r\n    return (\r\n      <div>\r\n        <Header as=\"h1\" color={\"red\"} textAlign=\"center\">\r\n          Все курсы\r\n        </Header>\r\n        <h4 class=\"ui horizontal divider\">\r\n          <i class=\"angle down red icon\"></i>\r\n        </h4>\r\n\r\n        <Card.Group textAlign=\"center\">{courses()}</Card.Group>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Tab, Button, List, Header } from \"semantic-ui-react\";\r\nimport { DataService } from \"../services/data-service\";\r\n\r\nconst ListIcon = props => (\r\n  <List>\r\n    <List.Item>\r\n      <List.Icon name=\"user\" />\r\n      <List.Content>{props.name}</List.Content>\r\n    </List.Item>\r\n    <List.Item>\r\n      <List.Icon name=\"marker\" />\r\n      <List.Content>{props.location}</List.Content>\r\n    </List.Item>\r\n    <List.Item>\r\n      <List.Icon name=\"mail\" />\r\n      <List.Content>\r\n        <a href=\"{props.email}\">{props.email}</a>\r\n      </List.Content>\r\n    </List.Item>\r\n    <List.Item>\r\n      <List.Icon name=\"linkify\" />\r\n      <List.Content>\r\n        <a href=\"{props.site}\">{props.site}</a>\r\n      </List.Content>\r\n    </List.Item>\r\n  </List>\r\n);\r\n\r\nexport default class LK extends Component {\r\n  data = new DataService();\r\n  state = {\r\n    name: null,\r\n    location: null,\r\n    email: null,\r\n    site: null\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.updateInfo();\r\n  }\r\n\r\n  updateInfo() {\r\n    this.data.getUserInfo().then(res => {\r\n      this.setState({\r\n        name: res.name,\r\n        location: res.location,\r\n        email: res.email,\r\n        site: res.site\r\n      });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header as=\"h1\" color={\"red\"} textAlign=\"center\">\r\n          Личный кабинет\r\n        </Header>\r\n        <h4 class=\"ui horizontal divider\">\r\n          <i class=\"angle down red icon\"></i>\r\n        </h4>\r\n        <ListIcon\r\n          name={this.state.name}\r\n          location={this.state.location}\r\n          email={this.state.email}\r\n          site={this.state.site}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter, Route, Switch } from \"react-router\";\r\nimport {\r\n  Header,\r\n  Card,\r\n  Image,\r\n  Icon,\r\n  Container,\r\n  Button,\r\n  Label,\r\n  Divider\r\n} from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { DataService } from \"../services/data-service\";\r\n\r\nconst topics = [\r\n  {\r\n    id: 0,\r\n    name: \"Базы данных\",\r\n    teacher: \"Иванов Иван Иванович\",\r\n    progress: 60,\r\n    topics: [\r\n      {\r\n        id: 0,\r\n        name: \"Иерархическая модель\",\r\n        text:\r\n          \"Иерархические базы данных могут быть представлены как дерево, состоящее из объектов различных уровней. Верхний уровень занимает один объект, второй — объекты второго уровня и т. д. Между объектами существуют связи, каждый объект может включать в себя несколько объектов более низкого уровня. Такие объекты находятся в отношении предка (объект более близкий к корню) к потомку (объект более низкого уровня), при этом возможна ситуация, когда объект-предок не имеет потомков или имеет их несколько, тогда как у объекта-потомка обязательно только один предок. Объекты, имеющие общего предка, называются близнецами.\",\r\n        progress: 40,\r\n        tests: [\"id1\", \"id2\"]\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nclass Tt extends React.Component {\r\n  // tt;\r\n  // data = new DataService();\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.setState({\r\n  //     data: null\r\n  //   });\r\n  //   this.Update();\r\n  // }\r\n\r\n  // Update() {\r\n  //   this.data.getCourseById().then(res => {\r\n  //     this.tt = (\r\n  //       <div>\r\n  //         <Header as=\"h1\" color=\"teal\">\r\n  //           {res.topics[this.props.match.params.id].name}\r\n  //         </Header>\r\n  //         {res.topics[this.props.match.params.id].text}\r\n  //         <Divider horizontal>Задания</Divider>\r\n\r\n  //         {res.topics[this.props.match.params.id].tests.map(n => {\r\n  //           return (\r\n  //             <Link to={`/tests/${n}`}>\r\n  //               <Button color=\"teal\">\r\n  //                 Тест № <Label>{n}</Label>\r\n  //               </Button>\r\n  //             </Link>\r\n  //           );\r\n  //         })}\r\n  //       </div>\r\n  //     );\r\n  //   });\r\n  // }\r\n\r\n  render() {\r\n    const { match, location, history } = this.props;\r\n    console.log(match);\r\n\r\n    return (\r\n      <div>\r\n        <Button onClick={() => window.history.back()} color=\"red\">\r\n          <Header color=\"black\" inverted>\r\n            Закрыть тест\r\n          </Header>\r\n        </Button>\r\n        You are now at {location.pathname}\r\n        <Header size=\"large\" color=\"teal\" icon=\"close\" textAlign=\"center\">\r\n          as\r\n        </Header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport const TestsPage = withRouter(Tt);\r\n","import React from \"react\";\r\n\r\nimport \"./App.css\";\r\nimport Navigation from \"./component/navigation/navigation\";\r\nimport { Grid, Segment } from \"semantic-ui-react\";\r\nimport MyCourses from \"./pages/my-courses\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport MyTeachers from \"./pages/my-teachers\";\r\nimport AllCourses from \"./pages/all-courses\";\r\nimport LK from \"./pages/lk\";\r\nimport { TestsPage } from \"./pages/tests\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Grid>\r\n          <Navigation />\r\n          <Grid.Column width={13}>\r\n            <Segment>\r\n              <Switch>\r\n                <Route path=\"/my-courses/\">\r\n                  <MyCourses />\r\n                </Route>\r\n                <Route path=\"/my-teachers\">\r\n                  <MyTeachers />\r\n                </Route>\r\n                <Route path=\"/all-courses\">\r\n                  <AllCourses />\r\n                </Route>\r\n                <Route path=\"/tests/:id\">\r\n                  <TestsPage />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <LK />\r\n                </Route>\r\n              </Switch>\r\n            </Segment>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}